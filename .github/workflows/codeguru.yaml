name: Analyze with CodeGuru Reviewer

on:
 - push
 - workflow_dispatch # This allows manual triggering of the action through the GitHub UI.

permissions:
    id-token: write
    contents: read
    security-events: write


jobs:
  build:
    name: Analyze with CodeGuru Reviewer
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      id: iam-role
      continue-on-error: true
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.GHB_TOKEN }}
        aws-region: eu-west-1

    - uses: actions/checkout@v2
      if: steps.iam-role.outcome == 'success'
      with:
        fetch-depth: 0

    - name: CodeGuru Reviewer
      uses: aws-actions/codeguru-reviewer@v1.1
      if: steps.iam-role.outcome == 'success'
      continue-on-error: false
      with:
        s3_bucket: codeguru-reviewer-github-profiler-20231001

    - name: Store SARIF file
      if: steps.iam-role.outcome == 'success'
      uses: actions/upload-artifact@v2
      with:
        name: SARIF_recommendations
        path: ./codeguru-results.sarif.json

    - name: Upload review result
      if: steps.iam-role.outcome == 'success'
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: codeguru-results.sarif.json

    - name: CodeGuru Security
      uses: aws-actions/codeguru-security@v1
      with:
        source_path: .
        aws_region: eu-west-1
        fail_on_severity: Critical
    - name: Print findings
      run: |
        ls -l
        cat codeguru-security-results.sarif.json

    # If you want content in security scanning, youâ€™ll need to enable codescanning by going into github.
    # https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning-for-a-repository
    - name: Upload result
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: codeguru-security-results.sarif.json
